{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport styles from \"../styles/taskinputfield\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TaskInputField = function TaskInputField(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      descricao = _useState2[0],\n      setDescricao = _useState2[1];\n\n  var handleDescricaoChange = function handleDescricaoChange(descricao) {\n    return setDescricao(descricao);\n  };\n\n  var postTask = function _callee() {\n    var requestOptions;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(descricao != \"\")) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.prev = 1;\n            requestOptions = {\n              method: 'POST',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify({\n                descricao: descricao\n              })\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(fetch('http://localhost:3000/task', requestOptions));\n\n          case 5:\n            props.addTask;\n            _context.next = 12;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            setDescricao('');\n\n          case 12:\n            _context.next = 14;\n            break;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.inputField,\n      value: descricao,\n      placeholder: 'Escreva uma tarefa',\n      onChangeText: handleDescricaoChange,\n      onChangeTextColor: '#fff'\n    }), _jsx(TouchableOpacity, {\n      onPress: postTask,\n      children: _jsx(View, {\n        style: styles.button,\n        children: _jsx(MaterialIcons, {\n          name: \"add\",\n          size: 24,\n          color: \"black\"\n        })\n      })\n    })]\n  });\n};\n\nexport default TaskInputField;","map":{"version":3,"sources":["/home/pbattistella/desenvolvimento/react-native/todolist-backend-frontend/frontend/src/components/TaskinputField.js"],"names":["React","useState","MaterialIcons","styles","TaskInputField","props","descricao","setDescricao","handleDescricaoChange","postTask","requestOptions","method","headers","body","JSON","stringify","fetch","addTask","console","log","container","inputField","button"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAC9B,kBAAkCJ,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAF,SAAS;AAAA,WAAIC,YAAY,CAACD,SAAD,CAAhB;AAAA,GAAvC;;AAEA,MAAMG,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACTH,SAAS,IAAI,EADJ;AAAA;AAAA;AAAA;;AAAA;AAGCI,YAAAA,cAHD,GAGkB;AACnBC,cAAAA,MAAM,EAAE,MADW;AAEnBC,cAAAA,OAAO,EAAE;AAAC,gCAAgB;AAAjB,eAFU;AAGnBC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBT,gBAAAA,SAAS,EAAEA;AADM,eAAf;AAHa,aAHlB;AAAA;AAAA,6CAUCU,KAAK,CAAC,4BAAD,EAA+BN,cAA/B,CAVN;;AAAA;AAWLL,YAAAA,KAAK,CAACY,OAAN;AAXK;AAAA;;AAAA;AAAA;AAAA;AAaLC,YAAAA,OAAO,CAACC,GAAR;AACAZ,YAAAA,YAAY,CAAC,EAAD,CAAZ;;AAdK;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAqBA,SACI,MAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEJ,MAAM,CAACiB,SAApC;AAAA,eACI,KAAC,SAAD;AAAW,MAAA,KAAK,EAAEjB,MAAM,CAACkB,UAAzB;AAAqC,MAAA,KAAK,EAAEf,SAA5C;AACI,MAAA,WAAW,EAAE,oBADjB;AAEI,MAAA,YAAY,EAAEE,qBAFlB;AAGI,MAAA,iBAAiB,EAAE;AAHvB,MADJ,EAMI,KAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEC,QAA3B;AAAA,gBACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEN,MAAM,CAACmB,MAApB;AAAA,kBACI,KAAC,aAAD;AAAe,UAAA,IAAI,EAAC,KAApB;AAA0B,UAAA,IAAI,EAAE,EAAhC;AACI,UAAA,KAAK,EAAC;AADV;AADJ;AADJ,MANJ;AAAA,IADJ;AAgBH,CA1CD;;AA4CA,eAAelB,cAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, KeyboardAvoidingView, TextInput, TouchableOpacity } from 'react-native'\nimport { MaterialIcons } from '@expo/vector-icons'\nimport styles from '../styles/taskinputfield'\n\nconst TaskInputField = (props) => {\n    const [descricao, setDescricao] = useState('')\n\n    const handleDescricaoChange = descricao => setDescricao(descricao)\n\n    const postTask = async () => {\n        if (descricao != \"\"){\n            try{\n                const requestOptions = {\n                    method: 'POST',\n                    headers: {'Content-type': 'application/json'},\n                    body: JSON.stringify({\n                        descricao: descricao\n                    })\n                }\n                await fetch('http://localhost:3000/task', requestOptions)\n                props.addTask\n            } catch( error){\n                console.log(error)\n                setDescricao('')\n            }\n        } else {\n            //mensagem ao usu√°rio solicitando o preenchimento dos campos\n        }\n    }\n\n    return (\n        <KeyboardAvoidingView style={styles.container}>\n            <TextInput style={styles.inputField} value={descricao}\n                placeholder={'Escreva uma tarefa'}\n                onChangeText={handleDescricaoChange}\n                onChangeTextColor={'#fff'}\n            />\n            <TouchableOpacity onPress={postTask}>\n                <View style={styles.button}>\n                    <MaterialIcons name=\"add\" size={24}\n                        color=\"black\"\n                    />\n                </View>\n            </TouchableOpacity>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default TaskInputField"]},"metadata":{},"sourceType":"module"}